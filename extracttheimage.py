# -*- coding: utf-8 -*-
"""ExtractTheImage.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nP_Tc8ac8zDn2Yqr8P96yyDu3M0Fywiv

# Running
"""

import zipfile as zf
files = zf.ZipFile("images.zip", 'r')
files.extractall('images')
files.close()

import fitz
import os
from PIL import Image

file_path = 'sample.pdf'

pdf_file = fitz.open(file_path)

page_nums = len(pdf_file)

images_list = []

for page_num in range(page_nums):
    page_content = pdf_file[page_num]
    images_list.extend(page_content.get_images())

print(images_list)

if len(images_list) == 0:
    raise ValueError(f"No images found in (file_path)")

for i, image in enumerate(images_list, start=1):
    xref = image[0]
    base_image = pdf_file.extract_image(xref)
    image_bytes = base_image['image']
    image_ext = base_image['ext']
    image_name = str(i)+"."+image_ext
    with open(os.path.join('images/',image_name),'wb') as image_file:
        image_file.write(image_bytes)
        image_file.close()

import os

# specify the folder path
folder_path = "images/"

# get a list of all files in the folder
file_list = os.listdir(folder_path)

# filter the list to include only image files
image_list = [file for file in file_list if file.endswith(('.jpg', '.jpeg', '.png', '.gif'))]

# print the list of image files
print(image_list)

from PIL import Image
# specify the folder path
# folder_path = 'images/'

# loop through all files in the folder
for filename in image_list:
    image = Image.open(os.path.join(folder_path, filename))
    # print image properties
#     image.show()
    print(filename)
    print(f"Image Format: {image.format}")
    print(f"Image Mode: {image.mode}")
    print(f"Image Size: {image.size}")
    # calculate image size in bytes
    img_bytes = image.size[0] * image.size[1] * len(image.getbands()) / 8

    print(f"Image Size in Bytes: {img_bytes}")
    print("------------------------------")

#checking blurriness of image
import cv2
from scipy.signal import wiener

# loop over all image files in the folder
for filename in os.listdir(folder_path):
    if filename.endswith(('.jpg', '.jpeg', '.png', '.gif')):
        # read the image file
        img_path = os.path.join(folder_path, filename)
        img = cv2.imread(img_path)

        # calculate the image sharpness using Laplacian operator
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        sharpness = cv2.Laplacian(gray, cv2.CV_64F).var()
        print(sharpness)
        # determine whether the image is blurry or not
        if sharpness < 40:
            print(f'{filename} is blurry.')
            
            #try to clear the image
            # convert image to grayscale
            gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
            # apply the Wiener filter to the grayscale image
            deblurred = wiener(gray, (5, 5))
            # convert the deblurred image back to BGR format
            deblurred_bgr = cv2.cvtColor(deblurred.astype('uint8'), cv2.COLOR_GRAY2BGR)
            # save the deblurred image to a new file
            new_filename = os.path.splitext(filename)[0] + '_deblurred.jpg'
            cv2.imwrite(os.path.join(folder_path, new_filename), deblurred_bgr)
        else:
            print(f'{filename} is sharp.')
        print("\n")

